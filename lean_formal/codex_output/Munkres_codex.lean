theorem exercise_13_1 (X : Type*) [topological_space X]
  (A : set X) (hA : ‚àÄ x ‚àà A, ‚àÉ U : set X, is_open U ‚àß x ‚àà U ‚àß U ‚äÜ A): 
  is_open A :=
sorry

theorem exercise_13_5a {X : Type*} 
    [topological_space X] (A : set (set X)) (hA : is_basis A) :
    topological_space.generate_from A = 
    {T : set (set X) | ‚àÄ (U : set X), U ‚àà T ‚Üí ‚àÉ (V : set X), is_open V ‚àß V ‚äÜ U ‚àß ‚àÉ (a : set X), a ‚àà A ‚àß a ‚äÜ V} :=
sorry

theorem exercise_13_5b (X : Type*) (A : set (set X)) 
    (hA : is_subbasis A) :
    @topology.generate X A = ‚ãÇ‚ÇÄ {U | is_topology U ‚àß A ‚äÜ U} :=
sorry

theorem exercise_16_1 {X : Type*} [topological_space X] 
    {Y : set X} [is_subspace Y] {A : set Y} [is_subspace A] (hA : A ‚äÜ Y) :
    subtype.topology A = subtype.topology (A : set X) :=
sorry

theorem exercise_16_4 {X Y : Type*} [topological_space X] [topological_space Y] :
    is_open (pi_1 : X √ó Y ‚Üí X) :=
sorry

theorem exercise_16_6 : 
    is_topological_basis (set.range (Œª (p : ‚Ñï √ó ‚Ñï), 
    (Icc (p.1 : ‚Ñö) (p.2 : ‚Ñö)) √ó (Icc (p.1 : ‚Ñö) (p.2 : ‚Ñö)))) :=
sorry

theorem exercise_16_9 (X Y : Type*) 
    [topological_space X] [topological_space Y] :
    topological_space.induced (prod.lex X Y) = 
    topological_space.prod (topological_space.discrete X) 
    (topological_space.induced Y) :=
sorry

theorem exercise_17_2 {X : Type*} [topological_space X]
    {Y : Type*} [topological_space Y] {A : set Y} (hA : is_closed A)
    (hY : is_closed (set.range (subtype.val : Y ‚Üí X))) :
    is_closed (subtype.val '' A) :=
sorry

theorem exercise_17_3 {X Y : Type*} [topological_space X] [topological_space Y]
    (A : set X) (B : set Y) (hA : is_closed A) (hB : is_closed B) :
    is_closed (set.prod A B) :=
sorry

theorem exercise_17_4 {X : Type*} [topological_space X] 
    (U : set X) (hU : is_open U) (A : set X) (hA : is_closed A) :
    is_open (U \ A) ‚àß is_closed (A \ U) :=
sorry

theorem exercise_18_8a {X : Type*} [topological_space X] {Y : Type*} 
    [topological_space Y] [ordered_topology Y] {f g : X ‚Üí Y} 
    (hf : continuous f) (hg : continuous g) : 
    is_closed {x | f x ‚â§ g x} :=
sorry

theorem exercise_18_8b {X : Type*} [topological_space X] {Y : Type*} 
    [topological_space Y] [ordered_topology Y] {f g : X ‚Üí Y} 
    (hf : continuous f) (hg : continuous g) :
    continuous (Œª x, min (f x) (g x)) :=
sorry

theorem exercise_18_13 
    {X : Type*} [topological_space X] {Y : Type*} [topological_space Y] 
    [t2_space Y] {A : set X} {f : A ‚Üí Y} (hf : continuous f) 
    (hA : is_compact A) (h : ‚àÉ (g : closure A ‚Üí Y), continuous g ‚àß 
    ‚àÄ (x : closure A), x ‚àà A ‚Üí g x = f x) :
    ‚àÉ! (g : closure A ‚Üí Y), continuous g ‚àß ‚àÄ :=
sorry

theorem exercise_19_4 {Œ± : Type u} {Œ≤ : Type v} {Œ≥ : Type w} 
    [topological_space Œ±] [topological_space Œ≤] [topological_space Œ≥] 
    (h : Œ± ‚âÉ Œ≤) (x : Œ±) : 
    (Œ≤ √ó Œ≥) ‚âÉ (Œ± √ó Œ≥) :=
sorry

theorem exercise_19_6a {Œπ : Type*} 
    {f : Œπ ‚Üí Type*} [‚àÄ i, topological_space (f i)] {s : set Œπ} 
    {x : Œ† i, f i} {y : Œ† i, f i} :
    tendsto (Œª i, (x i, y i)) (prod_topology s) (prod.topological_space (Œª i, f i)) 
    ‚Üî ‚àÄ i ‚àà s, tendsto (Œª i, x i) (prod_topology s :=
sorry

theorem exercise_19_9 {Œ± : Type u} {Œ≤ : Œ± ‚Üí Type v} 
    (h : ‚àÄ a, nonempty (Œ≤ a)) :
    nonempty (Œ† a, Œ≤ a) ‚Üî ‚àÄ a, nonempty (Œ≤ a) :=
sorry

theorem exercise_20_2 (X Y : Type*) [topological_space X] 
    [topological_space Y] : is_metrizable_space (X √ó Y) :=
sorry

theorem exercise_20_5 : 
    closure (set.range (Œª (n : ‚Ñï), 0)) = set.range (Œª (n : ‚Ñï), 0) :=
sorry

theorem exercise_21_6a {x : ‚Ñù} (hx : 0 ‚â§ x) (hx1 : x ‚â§ 1) 
    (h : tendsto (Œª n, x ^ n) at_top (ùìù 1)) :
    tendsto (Œª n, x ^ n) at_top (ùìù x) :=
sorry

theorem exercise_21_6b (n : ‚Ñï) : 
    ‚àÄ (Œµ : ‚Ñù), Œµ > 0 ‚Üí ‚àÉ (x : ‚Ñù), x ‚àà Icc 0 1 ‚àß abs (x ^ n - 1) ‚â• Œµ :=
sorry

theorem exercise_21_8 
    {X : Type*} [topological_space X] {Y : Type*} [metric_space Y] 
    {f : ‚Ñï ‚Üí X ‚Üí Y} {x : ‚Ñï ‚Üí X} (hf : uniform_limit f (Œª n, f n x n)) 
    (hx : tendsto x at_top (ùìù x)) :
    tendsto (Œª n, f n (x n)) at_top (ùìù (f x)) :=
sorry

theorem exercise_22_2a {X Y : Type*} [topological_space X] 
    [topological_space Y] (p : X ‚Üí Y) (h : continuous p) :
    quotient_map p ‚Üî ‚àÉ (f : Y ‚Üí X), continuous f ‚àß p ‚àò f = id :=
sorry

theorem exercise_22_2b {X : Type*} [topological_space X] 
    {A : set X} (r : X ‚Üí A) (hr : continuous r) (h : ‚àÄ x ‚àà A, r x = x) :
    quotient_map r :=
sorry

theorem exercise_22_5 {X Y : Type*} [topological_space X] 
    [topological_space Y] (p : X ‚Üí Y) (hp : is_open_map p) 
    (A : set X) (hA : is_open A) : is_open_map (p ‚àò subtype.val : A ‚Üí Y) :=
sorry

theorem exercise_23_2 {X : Type*} 
    [topological_space X] {A : ‚Ñï ‚Üí set X} (hA : ‚àÄ n, is_connected (A n)) 
    (hAn : ‚àÄ n, A n ‚à© A (n + 1) ‚â† ‚àÖ) :
    is_connected (‚ãÉ n, A n) :=
sorry

theorem exercise_23_3 {X : Type*} [topological_space X]
    (A : set X) (hA : is_connected A) (As : set (set X)) 
    (hAs : ‚àÄ (A' : set X), A' ‚àà As ‚Üí is_connected A') 
    (hAAs : ‚àÄ (A' : set X), A' ‚àà As ‚Üí A ‚à© A' ‚â† ‚àÖ) :
    is_connected (A ‚à™ (‚ãÉ‚ÇÄ As)) :=
sorry

theorem exercise_23_4 {X : Type*} [fintype X] :
  connected (finite_compl_topology X) ‚Üî infinite X :=
sorry

theorem exercise_23_6 {X : Type*} 
    [topological_space X] {A : set X} (hA : is_open A) (hc : is_connected X) 
    (C : set X) (hC : is_connected C) (hCX : C ‚äÜ X) (hCA : C ‚à© A ‚â† ‚àÖ) 
    (hCXA : C ‚à© (X \ A) ‚â† ‚àÖ) : C ‚à© (boundary A) ‚â† ‚àÖ :=
sorry

theorem exercise_23_9 {X Y : Type*} 
    [topological_space X] [topological_space Y] (hX : connected X) 
    (hY : connected Y) (A : set X) (B : set Y) (hA : is_proper_subset A X) 
    (hB : is_proper_subset B Y) :
    connected ((X √ó Y) \ (A √ó B)) :=
sorry

theorem exercise_23_11 {X : Type*} [topological_space X]
    {Y : Type*} [topological_space Y] (p : X ‚Üí Y) (hq : quotient_map p)
    (hY : connected Y) (hX : ‚àÄ y : Y, connected (p ‚Åª¬π' {y})) :
    connected X :=
sorry

theorem exercise_23_12 {X Y : Type*} [topological_space X] [topological_space Y]
    (hX : connected X) (hY : connected Y) (hXY : Y ‚äÜ X) (A B : set X) 
    (hA : is_open A) (hB : is_open B) (hAB : A ‚à™ B = X) (hAB' : A ‚à© B = ‚àÖ) 
    (hAY : A ‚à© Y = ‚àÖ) (hBY : B ‚à© Y = ‚àÖ) :
    connected (Y ‚à™ A) ‚àß connected ( :=
sorry

theorem exercise_24_2 {f : sphere 1 ‚Üí ‚Ñù} 
    (hf : continuous f) : ‚àÉ (x : sphere 1), f x = f (-x) :=
sorry

theorem exercise_24_3a {X : Type*} [topological_space X] 
    (f : X ‚Üí X) (hf : continuous f) (hX : X = Icc 0 1) :
    ‚àÉ (x : X), f x = x :=
sorry

theorem exercise_24_4 {X : Type*} [linear_order X] 
    [topological_space X] [order_topology X] (hX : connected_space X) :
    linear_continuum X :=
sorry

theorem exercise_24_6 {X : Type*} [linear_order X] 
    (hX : well_order X) : linear_continuum (X √ó Icc 0 1) :=
sorry

theorem exercise_25_4 {X : Type*} [topological_space X]
    [locally_path_connected_space X] (U : set X) (hU : is_open U) 
    (hcU : connected U) : path_connected U :=
sorry

theorem exercise_25_9 (G : Type*) [topological_group G] 
    (C : set G) (hC : is_connected G C) : 
    is_normal G C :=
sorry

theorem exercise_26_9 {X : Type*} 
    [topological_space X] {Y : Type*} [topological_space Y] 
    {A : set X} {B : set Y} (hA : is_compact A) (hB : is_compact B) 
    (N : set (X √ó Y)) (hN : is_open N) (hAB : A √ó B ‚äÜ N) :
    ‚àÉ (U : set X) (V : set Y), is_open U ‚àß is_open V ‚àß A √ó B :=
sorry

theorem exercise_26_11 
    {X : Type*} [topological_space X] [compact_space X] [t2_space X] 
    (A : set (set X)) (hA : ‚àÄ (a b : set X), a ‚àà A ‚Üí b ‚àà A ‚Üí a ‚äÜ b ‚à® b ‚äÜ a) 
    (hA' : ‚àÄ (a : set X), a ‚àà A ‚Üí is_closed a) (hA'' : ‚àÄ (a : set X), a ‚àà A ‚Üí connected a) :
    connected (‚ãÇ (a : set :=
sorry

theorem exercise_26_12 {X Y : Type*} [topological_space X]
    [topological_space Y] (p : X ‚Üí Y) (hc : continuous p) (hp : ‚àÄ y : Y, 
    is_compact (p ‚Åª¬π' {y})) (hY : is_compact Y) : is_compact X :=
sorry

theorem exercise_27_1 (X : Type*) [linear_order X] 
    (hX : ‚àÄ (a b : X), is_compact (Icc a b)) :
    has_lub X :=
sorry

theorem exercise_27_4 
    (X : Type*) [metric_space X] [connected_space X] (hX : ‚àÉ x y : X, x ‚â† y) :
    uncountable X :=
sorry

theorem exercise_28_4 {X : Type*} 
    [topological_space X] (hT1 : t1_space X) :
    countably_compact_space X ‚Üî limit_point_compact_space X :=
sorry

theorem exercise_28_5 
    (X : Type*) [topological_space X] :
    countably_compact X ‚Üî ‚àÄ (C : ‚Ñï ‚Üí set X), (‚àÄ n, is_closed (C n)) ‚àß 
    (‚àÄ n, C n ‚â† ‚àÖ) ‚àß (‚àÄ n, C n ‚äÜ C (n + 1)) ‚Üí ‚àÉ x, ‚àÄ n, x ‚àà C n :=
sorry

theorem exercise_28_6 {X : Type*} [metric_space X] 
    [compact_space X] {f : X ‚Üí X} (hf : isometry f) : 
    function.bijective f :=
sorry

theorem exercise_29_1 : ¬¨ locally_compact_space ‚Ñö :=
sorry

theorem exercise_29_4 : 
  ¬¨ locally_compact_space (uniform_space.product_topology 
    (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) 
    (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) (Ioo 0 1) 
    (Ioo 0 1) (Ioo 0 1) (Ioo 0 1 :=
sorry

theorem exercise_29_5 {X‚ÇÅ : Type*} 
    [topological_space X‚ÇÅ] [locally_compact_space X‚ÇÅ] 
    [compact_space X‚ÇÅ] [t2_space X‚ÇÅ] {X‚ÇÇ : Type*} [topological_space X‚ÇÇ] 
    [locally_compact_space X‚ÇÇ] [compact_space X‚ÇÇ] [t2_space X‚ÇÇ] 
    {f : X‚ÇÅ ‚Üí X‚ÇÇ} (hf : homeomorphism f :=
sorry

theorem exercise_29_6 :
  one_point_compactification ‚Ñù ‚âÉ_h circle :=
sorry

theorem exercise_29_10 {X : Type*} 
    [topological_space X] [t2_space X] (x : X) (hx : is_locally_compact_at x) 
    (U : set X) (hU : is_open U) (hxU : x ‚àà U) :
    ‚àÉ (V : set X), is_open V ‚àß x ‚àà V ‚àß compact (closure V) ‚àß closure V ‚äÜ U :=
sorry

theorem exercise_30_10 
    {Œπ : Type*} {X : Œπ ‚Üí Type*} [‚àÄ i, topological_space (X i)] 
    (h : ‚àÄ i, ‚àÉ (s : set (X i)), countable s ‚àß dense s) :
    ‚àÉ (s : set (Œ† i, X i)), countable s ‚àß dense s :=
sorry

theorem exercise_30_13 {X : Type*} [topological_space X]
    (hX : countable_dense_subset X) (U : set (set X)) 
    (hU : ‚àÄ (x y : set X), x ‚àà U ‚Üí y ‚àà U ‚Üí x ‚â† y ‚Üí x ‚à© y = ‚àÖ) :
    countable U :=
sorry

theorem exercise_31_1 {X : Type*} [topological_space X] 
    (hX : regular_space X) (x y : X) :
    ‚àÉ (U V : set X), is_open U ‚àß is_open V ‚àß x ‚àà U ‚àß y ‚àà V ‚àß closure U ‚à© closure V = ‚àÖ :=
sorry

theorem exercise_31_2 {X : Type*} 
    [topological_space X] [normal_space X] {A B : set X} 
    (hA : is_closed A) (hB : is_closed B) (hAB : disjoint A B) :
    ‚àÉ (U V : set X), is_open U ‚àß is_open V ‚àß A ‚äÜ U ‚àß B ‚äÜ V ‚àß disjoint (closure U) (closure V) :=
sorry

theorem exercise_31_3 {Œ± : Type*} [partial_order Œ±] 
    [topological_space Œ±] (h : order_topology Œ±) : regular_space Œ± :=
sorry

theorem exercise_32_1 {X : Type*} [topological_space X] 
    (hX : normal_space X) (A : set X) (hA : is_closed A) : 
    normal_space (subtype.topological_space A) :=
sorry

theorem exercise_32_2 
    {Œπ : Type*} {X : Œπ ‚Üí Type*} [‚àÄ i, topological_space (X i)] 
    (h : ‚àÄ i, nonempty (X i)) (hreg : regular_space (Œ† i, X i)) :
    ‚àÄ i, regular_space (X i) :=
sorry

theorem exercise_32_2 {X : Type*} [topological_space X]
    (hX : locally_compact_space X) (hX' : hausdorff_space X) :
    regular_space X :=
sorry

theorem exercise_33_7 
    (X : Type*) [topological_space X] (hX : is_locally_compact_hausdorff X) :
    is_completely_regular X :=
sorry

theorem exercise_33_8 
    (X : Type*) [topological_space X] [t2_space X] [compact_space X] 
    (A B : set X) (hA : is_closed A) (hB : is_closed B) 
    (hAB : disjoint A B) :
    ‚àÉ (f : X ‚Üí ‚Ñù), continuous f ‚àß f '' A = {0} ‚àß f '' B = {1} :=
sorry

theorem exercise_34_9 
    (X : Type*) [topological_space X] [compact_space X] 
    (X1 X2 : set X) (hX1 : is_closed X1) (hX2 : is_closed X2) 
    (hX : X1 ‚à™ X2 = univ) (hX1m : metrizable_space X1) 
    (hX2m : metrizable_space X2) : metrizable_space X :=
sorry

theorem exercise_37_2 {X : Type*} 
    [topological_space X] :
    lindelof X ‚Üî ‚àÄ (A : set (set X)), (‚àÄ (a : set X), a ‚àà A ‚Üí is_closed a) ‚Üí 
    (‚àÄ (a : set X), a ‚àà A ‚Üí a ‚â† ‚àÖ) ‚Üí (‚àÉ (a : set X), a ‚àà A) ‚Üí 
    (‚àÉ (a : set X), a ‚àà A ‚àß a ‚â† ‚àÖ) :=
sorry

theorem exercise_38_4 {X : Type*} 
    [topological_space X] {Y : Type*} [compact_space Y] 
    (hY : is_compactification X Y) :
    ‚àÉ (g : Œ≤ X ‚Üí Y), continuous g ‚àß surjective g ‚àß closed_map g ‚àß g ‚àò Œ≤.extend = id :=
sorry

theorem exercise_38_6 {X : Type*} 
    [topological_space X] (hX : completely_regular_space X) :
    connected X ‚Üî connected (Œ≤ X) :=
sorry

theorem exercise_39_5 
    {X : Type*} [topological_space X] (hX : countable_basis X) 
    (A : set (set X)) (hA : countably_locally_finite A) :
    countable A :=
sorry

theorem exercise_43_2 {X : Type*} [metric_space X]
    {Y : Type*} [metric_space Y] [complete_space Y] (A : set X) 
    (f : A ‚Üí Y) (hf : uniform_continuous f) :
    ‚àÉ (g : closure A ‚Üí Y), continuous g ‚àß uniform_continuous g ‚àß 
    ‚àÄ (x : A), g x = f x :=
sorry

theorem exercise_43_7 (X : Type*) [normed_group X] [normed_space ‚Ñù X] :
  complete_space (l2_seq X) :=
sorry